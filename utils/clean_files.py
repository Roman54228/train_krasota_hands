import os
from pathlib import Path
from PIL import Image  # –õ—É—á—à–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π, —á–µ–º OpenCV
import shutil

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏
ROOT_DIR = Path("/media/4TB/HAGRID/hagridv2_512/crops/train_multitask")  # <-- –£–±–µ–¥–∏—Å—å, —á—Ç–æ –ø—É—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π
IMAGES_DIR = ROOT_DIR / "images"
LABELS_DIR = ROOT_DIR / "labels"

# –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è
IMAGE_EXTENSIONS = {'.jpg', '.jpeg', '.png', '.bmp', '.tiff', '.webp'}

# –õ–æ–≥–∏
missing_label = []
missing_image = []
corrupted_image = []
deleted_files = []

def is_valid_image(image_path):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –º–æ–∂–Ω–æ –ª–∏ –æ—Ç–∫—Ä—ã—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ."""
    try:
        with Image.open(image_path) as img:
            img.verify()  # –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç—å, –Ω–æ –Ω–µ –∑–∞–≥—Ä—É–∂–∞–µ—Ç
        return True
    except Exception:
        return False

def clean_dataset():
    print("üîç –ù–∞—á–∏–Ω–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –ø–∞—Ä–Ω–æ—Å—Ç–∏ –∏ —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç–∏ —Ñ–∞–π–ª–æ–≤...")
    all_image_files = {}
    all_label_files = {}

    # –°–æ–±–∏—Ä–∞–µ–º –≤—Å–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏ –∏—Ö –ø—É—Ç–∏
    for img_path in IMAGES_DIR.rglob("*"):
        if img_path.suffix.lower() in IMAGE_EXTENSIONS:
            # –ö–ª—é—á: –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã–π –ø—É—Ç—å –±–µ–∑ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è
            rel_key = img_path.relative_to(IMAGES_DIR).with_suffix('')
            all_image_files[rel_key] = img_path

    # –°–æ–±–∏—Ä–∞–µ–º –≤—Å–µ .txt —Ñ–∞–π–ª—ã
    for txt_path in LABELS_DIR.rglob("*.txt"):
        rel_key = txt_path.relative_to(LABELS_DIR).with_suffix('')
        all_label_files[rel_key] = txt_path

    print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π: {len(all_image_files)}")
    print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ —Ä–∞–∑–º–µ—Ç–æ–∫: {len(all_label_files)}")

    # 1. –£–¥–∞–ª–∏—Ç—å .txt, –¥–ª—è –∫–æ—Ç–æ—Ä—ã—Ö –Ω–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    for rel_key, txt_path in all_label_files.items():
        if rel_key not in all_image_files:
            print(f"‚ùå –ù–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è: {txt_path}")
            missing_image.append(txt_path)
            try:
                txt_path.unlink()
                deleted_files.append(txt_path)
                print(f"üóëÔ∏è –£–¥–∞–ª—ë–Ω: {txt_path}")
            except Exception as e:
                print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å {txt_path}: {e}")

    # 2. –£–¥–∞–ª–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è, –¥–ª—è –∫–æ—Ç–æ—Ä—ã—Ö –Ω–µ—Ç .txt, –∏ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–∞ –±–∏—Ç–æ—Å—Ç—å
    for rel_key, img_path in all_image_files.items():
        if rel_key not in all_label_files:
            print(f"‚ùå –ù–µ—Ç —Ä–∞–∑–º–µ—Ç–∫–∏ –¥–ª—è: {img_path}")
            missing_label.append(img_path)
            try:
                img_path.unlink()
                deleted_files.append(img_path)
                print(f"üóëÔ∏è –£–¥–∞–ª—ë–Ω: {img_path}")
            except Exception as e:
                print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å {img_path}: {e}")
        else:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á–∏—Ç–∞–µ—Ç—Å—è –ª–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
            if not is_valid_image(img_path):
                print(f"üí• –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–æ–≤—Ä–µ–∂–¥–µ–Ω–æ: {img_path}")
                corrupted_image.append(img_path)
                # –£–¥–∞–ª—è–µ–º –∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ, –∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π .txt
                txt_path = all_label_files[rel_key]
                try:
                    img_path.unlink()
                    deleted_files.append(img_path)
                    print(f"üóëÔ∏è –£–¥–∞–ª–µ–Ω–æ –ø–æ–≤—Ä–µ–∂–¥—ë–Ω–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ: {img_path}")
                except Exception as e:
                    print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å {img_path}: {e}")
                try:
                    txt_path.unlink()
                    deleted_files.append(txt_path)
                    print(f"üóëÔ∏è –£–¥–∞–ª–µ–Ω–∞ —Ä–∞–∑–º–µ—Ç–∫–∞ (–±–µ–∑ –ø–∞—Ä—ã): {txt_path}")
                except Exception as e:
                    print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å {txt_path}: {e}")

    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    print("\n" + "="*50)
    print("‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞.")
    print(f"–£–¥–∞–ª–µ–Ω–æ —Ñ–∞–π–ª–æ–≤: {len(deleted_files)}")
    if missing_image:
        print(f"–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è (—É–¥–∞–ª–µ–Ω—ã .txt): {len(missing_image)}")
    if missing_label:
        print(f"–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ —Ä–∞–∑–º–µ—Ç–∫–∏ (—É–¥–∞–ª–µ–Ω—ã .png/.jpg): {len(missing_label)}")
    if corrupted_image:
        print(f"–ü–æ–≤—Ä–µ–∂–¥—ë–Ω–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: {len(corrupted_image)}")

    print(f"\nüóëÔ∏è –£–¥–∞–ª—ë–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã:")
    for f in deleted_files:
        print(f"  {f}")

if __name__ == "__main__":
    if not IMAGES_DIR.exists():
        print(f"‚ùå –ü–∞–ø–∫–∞ images –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: {IMAGES_DIR}")
    elif not LABELS_DIR.exists():
        print(f"‚ùå –ü–∞–ø–∫–∞ labels –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: {LABELS_DIR}")
    else:
        clean_dataset()